#ifndef	_TRACE_MANAGER_H_
#define	_TRACE_MANAGER_H_

/****************************************************************************************************/
/*																									*/
/*																									*/
/*		DataTraceManager.h : データトレース定義ヘッダファイル										*/
/*																									*/
/*																									*/
/************** Copyright (C) Yaskawa Electric Corporation ******************************************/
/*																									*/
/*	Note	:	初版	2010.10.26	T.Kira	For INGRAM												*/
/*																									*/
/*																									*/
/****************************************************************************************************/
#include "PrmAccessIf.h"
#include "MemobusIF.h"


/*--------------------------------------------------------------------------------------------------*/
/*		Variable Type Definition																	*/
/*--------------------------------------------------------------------------------------------------*/
/*--------------------------------------------------------------------------------------------------*/
/*		トレース実行指令定義																		*/
/*--------------------------------------------------------------------------------------------------*/
#define	TRCCMD_NOCMD			0x00				/* 指令なし										*/
#define	TRCCMD_DATATRACE		0x01				/* トレース実行指令								*/
#define	TRCCMD_RINGTRACE		0x02				/* 連続トレース実行指令							*/
#define	TRCCMD_CONTTRACE		0x03				/* トレース実行指令(モード維持)					*/
/*--------------------------------------------------------------------------------------------------*/
#define TRC_CH_MAXNUM			16					/* トレースチャンネル数							*/
/*--------------------------------------------------------------------------------------------------*/
#define	OPEMODE_NOCMD			0x0000				/* 通常モード									*/
#define	OPEMODE_DATATRACE		0x2000				/* データトレースモード							*/
#define	OPEMODE_RINGTRACE		0x200A				/* 連続トレースモード							*/
/*--------------------------------------------------------------------------------------------------*/
#if defined(_TEST_BOARD_)
#define TRC_BUF_SIZE			0x220				/* データトレースバッファサイズ(USHORT)			*/
#else
#define TRC_BUF_SIZE			0x4000				/* データトレースバッファサイズ(USHORT)			*//* <S04C> */
#endif
/*--------------------------------------------------------------------------------------------------*/
#define DATATRACE_SHORT			0x00				/* ショートデータトレース						*/
#define DATATRACE_LONG			0x01				/* ロングデータトレース							*/
/*--------------------------------------------------------------------------------------------------*/
#define IODATA_MERGE			0x00				/* IOデータを変数データに結合					*/
#define IODATA_DIV				0x01				/* IOデータを専用領域に格納						*/
/*--------------------------------------------------------------------------------------------------*/
#define SINGLE_TRG				0x00				/* シングルトリガデータトレース					*/
#define MULTI_TRG				0x01				/* マルチトリガデータトレース					*/
/*--------------------------------------------------------------------------------------------------*/
#define TRG_SEL2_USE			0x0F				/* トリガデータ選択2を使用				*//* <S012> */
#define NET_TRG_SEL				0x0F				/* ネットワークトリガを使用				*//* <S012> */

//#define _DATA_TRACE_DBUG_

/****************************************************************************************************/
/*																									*/
/*		データトレース定義構造体																	*/
/*																									*/
/****************************************************************************************************/
/*--------------------------------------------------------------------------------------------------*/
/*		トレース制御エリア：2100H - 220AH															*/
/*--------------------------------------------------------------------------------------------------*/
typedef	struct	TRCREG{
	USHORT	TrcMode;						/* 0x2100 : トレースモード								*/
	USHORT	DataSize;						/* 0x2101 : トレースデータ長							*/
	//USHORT	AreaSize;					/* 0x2102 : トレースバッファ長							*/	/* <S0C9> */
	USHORT	AreaSize;						/* 0x2102 : 使用エリアサイズ							*/	/* <S0C9> */
	USHORT	SampIntv;						/* 0x2103 : トレースサンプリング間隔					*/
	USHORT	SampTime;						/* 0x2104 : トレースサンプリング単位 [Us]				*/
	USHORT	SampLlim;						/* 0x2105 : トレースサンプリング間隔下限				*/
	USHORT	SampUlim;						/* 0x2106 : トレースサンプリング間隔上限				*/
	USHORT	MaxAreaSize;					/* 0x2107 : 最大トレースバッファ長						*/
	USHORT	OpeModeTrc;						/* 0x2108 : トレース専用操作モード設定/参照				*/
	USHORT	OpeCmdTrc;						/* 0x2109 : トレース専用操作設定						*/
	USHORT	TrcBuffSize;					/* 0x210A : トレースバッファ長							*/	/* <S0C9> */
	USHORT	MaxTrcBuffSize;					/* 0x210B : 最大トレースバッファ長						*/	/* <S0C9> */
	/*----------------------------------------------------------------------------------------------*/
/* <S0C9> Start */
//	USHORT	TrcSel[TRC_CH_MAXNUM];			/* 0x2110 : データトレース対象選択(1〜16)				*/
//	USHORT	IOTrcSel[TRC_CH_MAXNUM];		/* 0x2120 : I/Oトレース対象選択(1〜16)					*/
//	ULONG	*TrcAdr[TRC_CH_MAXNUM];			/* 0x2130 : トレース対象アドレス指定(非公開)			*/
	USHORT	DataIOTrcSel[TRC_CH_MAXNUM];	/* 0x2110 : データ、I/Oトレース対象選択(1〜16)			*/
	USHORT	TrcAxisSel[TRC_CH_MAXNUM];		/* 0x2120 : データトレース対象軸選択(1〜16)				*/
	USHORT	TrcDataSel[TRC_CH_MAXNUM];		/* 0x2130 : データトレース対象データ選択(1〜16)			*/
	USHORT	IOTrcAxisSel[TRC_CH_MAXNUM];	/* 0x2140 : I/Oトレース1対象軸選択(1〜16)				*/
	USHORT	IOTrcDataSel[TRC_CH_MAXNUM];	/* 0x2150 : I/Oトレース1対象データ選択(1〜16)			*/
	ULONG	*TrcAdr[TRC_CH_MAXNUM];			/* 0x2160 : トレース対象アドレス指定(非公開)			*/
/* <S0C9> End */
	/*----------------------------------------------------------------------------------------------*/
	USHORT	PtrgDnum;						/* 0x2200 : プリトリガデータ数							*/
	USHORT	TrgSel;							/* 0x2201 : トリガ条件									*/
	LONG	TrgLevel;						/* 0x2202 : トリガレベル								*/
	USHORT	TrgPoint;						/* 0x2204 : トリガ位置									*/
	USHORT	TrcState;						/* 0x2205 : トレース完了								*/
	ULONG 	RngTrcPtr;						/* 0x2206 : 連続トレース書込み位置						*/
	/*----------------------------------------------------------------------------------------------*/
	USHORT	MTrgMode;						/* 0x2208 : マルチトリガ設定							*/
	USHORT	MTrgSel;						/* 0x2209 : トリガ条件２								*/
	LONG	MTrgLevel;						/* 0x220A : トリガレベル２								*/
} TRCREG;



/****************************************************************************************************/
/*																									*/
/*		データトレース実行用変数定義																*/
/*																									*/
/****************************************************************************************************/
/*																									*/
/*		データトレース／テーブル運転実行用変数は、Round:DtrcMngr.c および ScanB:DtrcExec.c			*/
/*		により管理(書込み)され、他のモジュールは、参照のみ可能である。								*/
/*																									*/
/*																									*/
/*																									*/
/****************************************************************************************************/
/*--------------------------------------------------------------------------------------------------*/
/*		実アドレス定義																				*/
/*--------------------------------------------------------------------------------------------------*/
typedef	union TRCADRDATA{
	USHORT	*ShortAdrData;					/* 実アドレス指定ポインタ								*/
	ULONG	*LongAdrData;					/* 実アドレス指定ポインタ								*/
} TRCADRDATA;
/*--------------------------------------------------------------------------------------------------*/
/*		トレース対象定義																			*/
/*--------------------------------------------------------------------------------------------------*/
typedef	struct	TRCOBJ{						/* トレース対象定義										*/
	USHORT	TrcExeflg;						/* トレース実行制御フラグ(0x01:実行,その他:不実行)		*/
	void	*TrcBuf;						/* トレースデータ格納バッファ							*/
	TRCADRDATA	Adr;						/* 実アドレス定義										*/

	struct {								/* 数値トレース変数										*/
		void	*AxisPtr;					/* 数値トレースAXISHANDLE								*/
		USHORT	VxSftL;						/* 数値トレース変数左シフトスケール						*/
		USHORT	VxSftR;						/* 数値トレース変数右シフトスケール						*/
		LONG	VxData;						/* 数値トレースデータ									*/
		LONG	VxGain;						/* 数値トレース演算ゲイン								*/
		BOOL	AvrgSel;					/* 数値トレース平均選択:TRUE:平均化する,FALSE⇒しない	*/
		LONG	(*GetData)( void *Axis );	/* トレース変数アドレス取得関数							*/
	} TrcV;

	struct {
		//USHORT	BtvBit;					/* ビットトレース変数ビット選択(マスク)					*/
		void	*AxisPtr;					/* ビットトレースAXISHANDLE								*/
		BOOL	BtvData;					/* ビットトレース変数アドレス							*/
		BOOL	(*GetData)( void *Axis );	/* トレース変数アドレス取得関数							*/
	} TrcB;

} TRCOBJ;

/* <S0C9> Start */
/*--------------------------------------------------------------------------------------------------*/
/*		データトレース個別パラメータ(対象データ、対象軸)											*/
/*--------------------------------------------------------------------------------------------------*/
typedef	struct	TRCINDIVPRM{
	USHORT	TrcAxis[TRC_CH_MAXNUM];				/* データトレース対象軸選択(1〜16)				*/
	USHORT	TrcData[TRC_CH_MAXNUM];				/* データトレース対象データ選択(1〜16)			*/
	USHORT	IOTrcAxis[TRC_CH_MAXNUM];			/* I/Oトレース1対象軸選択(1〜16)				*/
	USHORT	IOTrcData[TRC_CH_MAXNUM];			/* I/Oトレース1対象データ選択(1〜16)			*/
} TRCINDIVPRM;
/* <S0C9> End */

/*--------------------------------------------------------------------------------------------------*/
/*		トレーストリガ変数情報定義																	*/
/*--------------------------------------------------------------------------------------------------*/
typedef	struct	TRCTRG{						/* トレース実行パラメータ定義							*/
	USHORT	TrgSel;							/* トレーストリガ選択									*/
	USHORT	TrgEdge;						/* トレーストリガエッジ指定								*/
	USHORT	TrgVsft;						/* トレーストリガデータシフト							*/
	LONG	TrgLevel;						/* トレーストリガレベル									*/
	ULONG	TrgBitSetMsk;					/* トレーストリガビットマスク							*/
	void	*TrgBufx;						/* トレーストリガデータバッファ							*/
}TRCTRG;

/*--------------------------------------------------------------------------------------------------*/
/*		トレース実行パラメータ定義																	*/
/*--------------------------------------------------------------------------------------------------*/
typedef	struct	TRCEXEP{					/* トレース実行パラメータ定義							*/
	USHORT	TrcPrmOk;						/* トレースパラメータＯＫ								*/
	USHORT	TrcDataType;					/* トレースデータタイプ									*/
	USHORT	TrcIOType;						/* IOトレースデータタイプ								*/
	ULONG	TrcDnum;						/* トレースデータ個数									*/
	ULONG	DataSampIntv;					/* トレースデータサンプリング間隔						*/
	LONG	UpperLmt;						/* トレースデータ上限									*/
	LONG	LowerLmt;						/* トレースデータ下限									*/
	ULONG	TrcBitSet;						/* トレースビットセット用								*/
	ULONG	TrcBitClr;						/* トレースビットクリア用								*/
	/*----------------------------------------------------------------------------------------------*/
	TRCTRG	TrcTrg[2];						/* トレーストリガ変数情報（マルチトリガ対応）			*/
	TRCOBJ	TrcObj[TRC_CH_MAXNUM];			/* トレース変数情報										*/
} TRCEXEP;

/*--------------------------------------------------------------------------------------------------*/
/*		トレース実行制御用変数定義																	*/
/*--------------------------------------------------------------------------------------------------*/
typedef	struct	TRCEXEV{					/* トレース実行制御用変数定義							*/
	USHORT	TrcCmd;							/* トレース実行指令										*/
	USHORT	Opened;	 						/* トレース機能既オープン								*/
	USHORT	OpmRun;							/* トレース操作モード実行中(OpeMode制御用)				*/
	USHORT	TrcStep;						/* トレース実行ステップ									*/
	USHORT	TrcSamp;						/* トレースサンプリング									*/
	USHORT	TrcIndx;						/* トレースインデクス									*/
	USHORT  RngTrcCnt;						/* 連続トレース書き込み回数								*/
	LONG	TrgVar[2];						/* トリガチェック変数(今回値,前回値)					*/
	LONG	MTrgVar[2];						/* トリガチェック変数(今回値,前回値)(マルチトリガ対応)	*/
	BOOL	NetTrigger;						/* ネットワークトリガ情報								*//* <S012> */
} TRCEXEV;

/*--------------------------------------------------------------------------------------------------*/
/*		データトレース管理用変数定義																*/
/*--------------------------------------------------------------------------------------------------*/
typedef	struct	TRCMNGP{					/* トレース管理パラメータ定義							*/
	ULONG	TrcVarTblEntNum;				/* 数値トレース定義テーブル登録個数						*/
	ULONG	TrcVarTblSrhIniW;				/* 数値トレース定義テーブル検索分割幅初期値				*/
	ULONG	TrcBitTblEntNum;				/* ビットトレース定義テーブル登録個数					*/
	ULONG	TrcBitTblSrhIniW;				/* ビットトレース定義テーブル検索分割幅初期値			*/
} TRCMNGP;
/*--------------------------------------------------------------------------------------------------*/
typedef	struct	TRCMNGV{					/* トレース管理データ変数								*/
	ULONG	TrcOpeRegWrtCnt;				/* パラメータ計算実行チェック用							*/
	ULONG	TdrvOpeRegWrtCnt;				/* パラメータ計算実行チェック用							*/
} TRCMNGV;

/****************************************************************************************************/
/*																									*/
/*		トレース実行変数定義																		*/
/*																									*/
/****************************************************************************************************/
typedef	struct	TRCHNDL{
	TRCREG	TrcReg;								/* トレース制御エリアレジスタ						*/
	TRCEXEP	TrcExeP;							/* トレース実行パラメータ							*/
	TRCEXEV	TrcExeV;							/* トレース実行制御用変数							*/
	TRCMNGP	TrcMngP;							/* トレース管理パラメータ							*/
	TRCMNGV	TrcMngV;							/* トレース管理データ変数							*/
	MEMOBUS_ADDR_MAP AxisMap[MAX_AXIS_NUMBER];	/* 軸アドレス定義									*/
	TRCINDIVPRM	TrcIncivPrm;					/* トレース個別パラメータ							 */	/* <S0C9> */
}TRCHNDL;

/****************************************************************************************************/
/*		PROTOTYPE																					*/
/****************************************************************************************************/
void		DtrcInitDtrcManager( TRCHNDL *TrcHndl, USHORT *TraceBuffer,	MEMOBUS_ADDR_MAP *AxisMap );
PRM_RSLT	DtrcCalcParameter( TRCHNDL *TrcHndl, USHORT *TraceBuffer );
PRM_RSLT	DtrcWriteOpeModeTrcRegister( TRCHNDL *TrcHndl, USHORT WrData );
PRM_RSLT	DtrcWriteOpeCmdTrcRegister( TRCHNDL *TrcHndl, USHORT *TraceBuffer, USHORT WrData );
void		DtrcExecute( TRCHNDL *TrcHndl );
void		DtrcProcedure( TRCHNDL *TrcHndl, LONG Idx );
void		DtrcSetTrcVar( TRCHNDL *TrcHndl );
void		DtrcResetAverageVar( TRCHNDL *TrcHndl );
void		DtrcInitExecute( TRCHNDL *TrcHndl );
void		DtrcInitExecuteRingTrc( TRCHNDL *TrcHndl );
void		DtrcSetNetworkTrigger( TRCHNDL *TrcHndl, BOOL Trigger ); /* <S012> */

/****************************************************************************************************/
/*		API's																						*/
/****************************************************************************************************/
ULONG	DtrcGetSampIntv( TRCHNDL *TrcHndl );
ULONG	DtrcGetTrcDataNum( TRCHNDL *TrcHndl );
void	DtrcSetTrgPointToZero( TRCHNDL *TrcHndl );
LONG	DtrcSearchTrcVarTbl( TRCHNDL *TrcHndl, LONG SelNo );

/***************************************** end of file **********************************************/
#endif	// _TRACE_MANAGER_H_
