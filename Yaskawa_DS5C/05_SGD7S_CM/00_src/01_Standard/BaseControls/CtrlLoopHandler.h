#ifndef CTRL_LOOP_HANDLER_H
/****************************************************************************************************/
/*																									*/
/*																									*/
/*		CtrlLoopHandler.h : 制御ループハンドル定義													*/
/*																									*/
/*																									*/
/*																									*/
/************** Copyright (C) Yaskawa Electric Corporation ******************************************/
/*																									*/
/*	Note	:	初版	2010.02.23	Y.Oka	For INGRAM												*/
/*																									*/
/*	Log		:	Ver1.00																				*/
/*																									*/
/****************************************************************************************************/
#include "Basedef.h"
#include "BacklashComp.h"
#include "MLib.h"


/****************************************************************************************************/
/*		DEFINES																						*/
/****************************************************************************************************/
#define	MAX_NETCYCLE			4000/125		/* NET要求最大待ち周期(伝送周期／制御周期)			*/



/****************************************************************************************************/
/*		STRUCT DEFINITION																			*/
/****************************************************************************************************/
/*--------------------------------------------------------------------------------------------------*/
/*		ゼロ速停止＆ゼロクランプ制御用変数定義														*/
/*--------------------------------------------------------------------------------------------------*/
typedef	struct ZX_CTRL_HNDL {					/* ゼロ速制御用定数＆変数定義						*/
	struct	{									/* ゼロ速制御用定数データ定義						*/
		LONG	Kp;									/* 位置制御比例ゲイン							*/
		LONG	SpdLimit;							/* 速度制御リミット値							*/
		LONG	OrgSrchSpeed;						/* 原点サーチ速度				[2^24/OvrSpd]	*/
	} conf;
	/*----------------------------------------------------------------------------------------------*/
	struct {									/* ゼロ速制御用変数データ定義						*/
		LONG	PosError;							/* 位置偏差										*/
		BOOL	OrgSrchFinish;						/* 原点サーチ完了flg							*/
	} var;
} ZX_CTRL_HNDL;


/*--------------------------------------------------------------------------------------------------*/
/*		Mode Switch Select definition																*/
/*--------------------------------------------------------------------------------------------------*/
enum MODE_SW_TYPE {
	MODESW_TRQREF = 0x00,						/* モードスイッチ トルク指令						*/
	MODESW_SPDREF = 0x01,						/* モードスイッチ 速度指令							*/
	MODESW_MOTACC = 0x02,						/* モードスイッチ 加速度							*/
	MODESW_POSERR = 0x03,						/* モードスイッチ 位置偏差							*/
	MODESW_NOTUSE = 0x04,						/* モードスイッチ 不使用							*/
};
/*--------------------------------------------------------------------------------------------------*/
/*		モードSW用パラメータ変数定義																*/
/*--------------------------------------------------------------------------------------------------*/
typedef	struct MODE_SW {						/* モードSW用パラメータ＆変数定義					*/
	struct {									/* モードSW用パラメータ定義							*/
		LONG		ModeSWSel;						/* モードスイッチ選択							*/
		LONG		MSWTrqLevel;					/* モードスイッチトルクレベル					*/
		LONG		MSWSpdLevel;					/* モードスイッチ速度レベル						*/
		LONG		MSWAccLevel;					/* モードスイッチ加速度レベル					*/
		LONG		MSWErrLevel;					/* モードスイッチ偏差レベル						*/
	} conf;
	/*----------------------------------------------------------------------------------------------*/
	struct {									/* モードSW用変数データ定義							*/
		BOOL		ModeSWFlag;						/* モードスイッチON Flag						*/
		LONG		Acceleration;					/* モードスイッチ用加速度						*/
	} var;
} MODE_SW;


/*--------------------------------------------------------------------------------------------------*/
/*		位置偏差算出用パラメータ定義																*/
/*--------------------------------------------------------------------------------------------------*/
typedef	struct PERRB {								/* 位置偏差作成用構造体定義						*/
	LONG		LastdPosRef;						/* 前回位置指令増分値[指令単位]					*/
	LONG		PerrComp;							/* 位置演算用補正値[指令単位]					*/
	LONG		per32s;								/* 位置偏差出力(四捨五入)						*/
	LONG		per32a;								/* 同上絶対値(四捨五入)							*/
} PERRB;

/*--------------------------------------------------------------------------------------------------*/
/*		位置制御演算用変数定義																		*/
/*--------------------------------------------------------------------------------------------------*/
typedef	struct POS_LOOP_CTRL {						/* 位置制御用定数＆変数定義							*/
//	struct	{									/* 位置制御用定数データ定義							*/
//		LONG	Kpi;								/* 位置制御比例積分ゲイン						*/
//		LONG	Kpd;								/* 位置制御比例微分ゲイン						*/
//		LONG	VelBias;							/* 位置制御速度バイアス							*/
//		LONG	BiasAddLevel;						/* 速度バイアス加算幅		[Pulse, mm]			*/
//		LONG	KdPff;								/* 位置制御位置増分値ＦＦゲイン					*/
//		LONG	KdPffFil;							/* 位置制御位置増分値ＦＦフィルタゲイン			*/
//	} conf;
	/*----------------------------------------------------------------------------------------------*/
	struct {									/* 位置制御用変数データ定義							*/
		BOOL	LoopStart;
//		LONG	SpdRef;								/* 位置制御出力									*/
		LONG	PerIvar64[2];						/* 位置偏差積分演算用							*/
//		LONG	PacOut;								/* 比例制御出力									*/
//		LONG	IacOut;								/* 積分制御出力									*/
//		LONG	DacOut;								/* 微分制御出力									*/
//		LONG	LastPacOut;							/* 前回比例制御出力								*/
//		LONG	dPFfFilo;							/* 位置増分値ＦＦフィルタ出力					*/
	} var;
} POS_LOOP_CTRL;

/*--------------------------------------------------------------------------------------------------*/
/*		位置管理用パラメータ定義																	*/
/*--------------------------------------------------------------------------------------------------*/
typedef	struct POS_MNG_HNDL {					/* 位置管理用データ定義								*/
	struct	{									/* 位置管理用定数データ定義							*/
		EGEAR		InvalidEgear;					/* 電子ギア機能無効時ギア比(1:1)				*/
		EGEAR		Egear;							/* 電子ギア比情報								*/
		UCHAR		CoinOutSel;						/* /COIN出力タイミング選択設定					*/
		LONG		CoinLevel;						/* 位置決め完了幅					[指令単位]	*/
		LONG		NearLevel;						/* Near信号幅						[指令単位]	*/
		LONG		PosErrDelayShift;				/* 位置偏差モニタ用補正時間シフト数				*/
	} conf;
	/*----------------------------------------------------------------------------------------------*/
	struct	{									/* 位置管理用定数データ定義							*/
		PERRA		PosErrA;						/* 位置偏差(指令単位)					<S14C>	*/
		LONG		dPcmdEgear;						/* 位置指令電子ギヤ出力							*/
		LONG		dPcmdEgrem;						/* 位置指令電子ギヤ演算余り						*/
		LONG		dPcmda;							/* 位置指令増分値入力[指令単位]					*/
		LONG		PosErr;							/* 位置アンプ偏差(Pulse)				<S14C>	*/
		LONG		Per64[2];						/* 位置アンプ偏差演算用(Pulse)					*/
//		LONG		LastdPcmda;						/* 前回位置指令増分値[指令単位]					*/
	/*----------------------------------------------------------------------------------------------*/
		BOOL		EgearDisable;					/* 電子ギヤ無効									*/
		BOOL		PcmdFilStop;					/* 位置指令フィルタ無効							*/
//		UCHAR		MCphOutTime;					/* モータC相出力時間制御用						*/
//		UCHAR		FCphOutTime;					/* フルクC相出力時間制御用						*/
//		UCHAR		SpareUc[2];						/* 予備(Alignment調整用)						*/
	/*----------------------------------------------------------------------------------------------*/
	} var;
	EGEAR		*Egear;								/* 電子ギア切り替え用ポインタ					*/
	BLSHCMP		BlshCmp;							/* バックラッシ補正演算用						*/
	APOSRG		PgPos;								/* 機械座標系のFB位置							*/
	APOSRG		MencPos;							/* モータPGのFB位置								*/
	APOSRG		FencPos;							/* フルクPGのFB位置								*/
	LONG		VirtualPositionError;				/* 仮想位置偏差(指令単位)				<S14C>	*/
/*--------------------------------------------------------------------------------------------------*/
/* 2012.09.07 Y.Oka ★暫定 他の構造体、もしくは処理自体見直し★ */
	LONG			dPosRefi;				/* 位置制御：位置指令差分入力			[Pulse/Scan]	*//* <S187> */
	LONG			CompdPosRefi;			/* 位置指令差分入力(ScanB->ScanA)		[Pulse/Scan]	*/
	LONG			CompdPcmda;				/* 位置指令増分値入力(ScanB->ScanA)		[指令単位]		*/
	USHORT			RefRenewCntA;			/* 位置指令更新処理用BaseLoopカウンタ					*/
	USHORT			RefRenewCntB;			/* 位置指令更新処理用BaseCtrlカウンタ					*/
	USHORT			RefRenewalChkCnt;		/* 位置指令更新チェック用								*/
/* 2012.09.07 Y.Oka ★暫定 他の構造体、もしくは処理自体見直し★ */
} POS_MNG_HNDL;


/*--------------------------------------------------------------------------------------------------*/
/*		制御演算用パラメータ定義																	*/
/*--------------------------------------------------------------------------------------------------*/
typedef	struct CTRL_CMD_PRM {
	struct	{								/* 調整レス用定義										*/
		KSGAIN			Klpf3;					/* 1次遅れフィルタゲイン(トルク補償後)				*/
		KSGAIN			SpdRefPhFil;			/* 位相進み用LPF									*/
		KSGAIN			SpdRefPhFilGn;			/* 位相進み補償ゲイン								*/
	} TLPrm;
	KSGAIN			OverTrqLoopGain[3];		/* 速度制限用ループゲイン								*/
	KSGAIN			OverTrqIntegGain[3];	/* 速度制限用積分ゲイン									*/
	LONG			OverTrqIntegBuf[2];		/* Over Torque Integral Gain Calculation Buffer			*/
	KSGAIN			Klpf;					/* 1次遅れフィルタゲイン								*/
	KSGAIN			Klpf2[4];				/* 2次遅れフィルタゲイン								*/
	KSGAIN			PI_rate;				/* 速度制御PI制御割合									*/
	KSGAIN			KVfbFil;				/* 速度FBフィルタゲイン									*/
	KSGAIN			Kpi;					/* 位置制御比例積分ゲイン								*/
	LONG			SvonSpdLmtValue;		/* サーボオン時速度制限値								*/
	/*----------------------------------------------------------------------------------------------*/
	KSGAIN			KpiFc;					/* フルク用位置制御比例積分ゲイン						*/
	KSGAIN			KdPff;					/* 位置制御位置増分値FFゲイン							*/
	KSGAIN			KdPffFil;				/* 位置制御位置増分値FFフィルタゲイン					*/
	BOOL			LpassFil2;				/* 2次遅れフィルタ選択									*/
	BOOL			LpassFil3;				/* トルク補償後1次遅れフィルタ選択						*/
	/*----------------------------------------------------------------------------------------------*/
	KSGAIN			KVrfFil;				/* 速度指令フィルタゲイン								*/
	BOOL			IPSpdControl;			/* I-P制御選択設定										*/
	BOOL			SpdIctrlKeep;			/* 速度制御積分保持										*/
	BOOL			VrefSpdLmt;				/* 速度指令を外部速度制限として使用						*/
#if (FLOAT_USE==TRUE)
	float			TConSpdLmtLevel;		/* トルク制御時の速度制限レベル		 [2^24/OvrSpd]		*/
	float			SpdSfsAcc;				/* ソフトスタート加速量									*/
	float			SpdSfsDec;				/* ソフトスタート減速量									*/
	float			SvonSpdLmtLevel;		/* サーボオン時速度制限レベル							*/
	float			SpdLdstpDec;			/* 直線減速停止減速量(Pn30A)							*/ /* <S1F5> */
#else
	LONG			TConSpdLmtLevel;		/* トルク制御時の速度制限レベル		 [2^24/OvrSpd]		*/
	LONG			SpdSfsAcc;				/* ソフトスタート加速量									*/
	LONG			SpdSfsDec;				/* ソフトスタート減速量									*/
	LONG			SvonSpdLmtLevel;		/* サーボオン時速度制限レベル							*/
	LONG			SpdLdstpDec;			/* 直線減速停止減速量(Pn30A)							*/ /* <S1F5> */
#endif /* FLOAT_USE */
} CTRL_CMD_PRM;


/*--------------------------------------------------------------------------------------------------*/
/*		制御演算用ワーク定義																		*/
/*--------------------------------------------------------------------------------------------------*/
typedef	struct CTRL_CMD_MNG {
	LONG			CtrlMode;				/* 基本ループ制御モード									*/
	LONG			LastCtrlMode;			/* 前回基本ループ制御モード								*/
/*--------------------------------------------------------------------------------------------------*/
#if (FLOAT_USE==TRUE)
	float			TrqRefo;				/* トルク指令出力					[2^24/MaxTrq]		*/
	float			SpdRefo;				/* 速度指令出力						[2^24/OvrSpd]		*/
	float			SpdLdstpRefo;			/* 直線減速停止速度指令出力								*/ /* <S1F5> */
	LONG			dPosRefo;				/* 位置指令差分出力					[Pulse/Scan]		*/
/*--------------------------------------------------------------------------------------------------*/
	LONG			BaseFbkPos;				/* 制御切り替え時のモータ位置		[Pulse]				*/
	LONG			dPosFbki;				/* 位置制御：位置ＦＢ差分入力		[Pulse/Scan]		*/
	LONG			PosFbki;				/* 位置制御：位置ＦＢ入力			[Pulse/Scan]		*/
	LONG			FbkPosFromCpos;			/* 原点からのモータ位置		 [+/-(PulseNo/2)],[LM:float]	*/
/*--------------------------------------------------------------------------------------------------*/
	BOOL			TrqFilClrCmd;			/* トルク指令フィルタ積分初期化要求						*/
	BOOL			TrqFilDisable;			/* トルク指令フィルタ無効要求							*/
//	float			TrqInputPos;			/* トルク外乱指令入力位置選択							*//* <S0B7> */
	float			SpdLimit;				/* トルク制御時の速度制限値								*/
	float			OverTrqIntegBuf[2];		/* トルク制御時の速度制限用積分バッファ					*/
/*--------------------------------------------------------------------------------------------------*/
	LONG			OverTrq;				/* @@ Over Torque [2^24/MaxTrq]							*/
	BOOL			SpdClamp;				/* @@ Speed Clamp Flag on Torque Control Mode			*/
/*--------------------------------------------------------------------------------------------------*/
	BOOL			TrqClamp;				/* <S045> Torque Clamp Flag								*/
/*--------------------------------------------------------------------------------------------------*/
	float			SpdRefi;				/* 速度指令入力						[2^24/OvrSpd]		*/
	float			SpdRfFilo;				/* 速度指令フィルタ出力				[2^24/OvrSpd]		*/
	float			SpdFbki;				/* 速度FB入力						[2^24/OvrSpd]		*/
	float			SpdObsFbki;				/* 速度FB入力(OBS後)				[2^24/OvrSpd]		*/
	float			VelIvar64[2];			/* 積分制御演算用(制御切り替え時ショック低減用)			*/
/*--------------------------------------------------------------------------------------------------*/
	float			PosRefLo;				/* 指令位置(Low)					[指令単位]			*/
	float			PosRef;					/* 位置制御時の指令位置				[指令単位]			*/
	PMAFV			Pmafvar;				/* 位置指令移動平均フィルタ演算用変数					*/
	LONG			dPcmdFilo;				/* 位置指令フィルタ出力				[Pulse/Scan]		*/
	LONG			Pmafbuf[MAX_NETCYCLE];	/* 位置指令移動平均フィルタ演算用BUF					*/
	float			dPFfFilo;				/* 位置増分値FFフィルタ出力								*/
	BOOL			PicvClrCmd;				/* 位置偏差積分クリア要求								*/
	BOOL			PerrClrReq;				/* 位置偏差クリア要求(テーブル運転/PJOG専用)			*/
	BOOL			PerClrEdge;				/* @@  位置偏差クリアエッジ要求(ANLG用)					*/
	LONG			ClrFbPos;				/* @@  位置偏差クリアラッチ位置(ANLG用)					*/
/*--------------------------------------------------------------------------------------------------*/
/*--------------------------------------------------------------------------------------------------*/
	LONG			SpdFFCx;				/* 拡張制御：速度FF補償				[2^24/OvrSpd]		*/
	float			SpdFBCx;				/* 拡張制御：速度FB補償				[2^24/OvrSpd]		*//* 2013/04/01版MDでは、ｺﾒﾝﾄｱｳﾄされている	*/	
	LONG			TrqFFCx;				/* 拡張制御：トルクFF補償			[2^24/MaxTrq]		*/
	float			TrqFBCx;				/* 拡張制御：トルクFB補償			[2^24/MaxTrq]		*/
#else
	LONG			TrqRefo;				/* トルク指令出力					[2^24/MaxTrq]		*/
	LONG			SpdRefo;				/* 速度指令出力						[2^24/OvrSpd]		*/
	LONG			SpdLdstpRefo;			/* 直線減速停止速度指令出力								*/ /* <S1F5> */
	LONG			dPosRefo;				/* 位置指令差分出力					[Pulse/Scan]		*/
/*--------------------------------------------------------------------------------------------------*/
	LONG			BaseFbkPos;				/* 制御切り替え時のモータ位置		[Pulse]				*/
	LONG			dPosFbki;				/* 位置制御：位置ＦＢ差分入力		[Pulse/Scan]		*/
	LONG			PosFbki;				/* 位置制御：位置ＦＢ入力			[Pulse/Scan]		*/
	LONG			FbkPosFromCpos;			/* 原点からのモータ位置		 [+/-(PulseNo/2)],[LM:LONG]	*/
/*--------------------------------------------------------------------------------------------------*/
	BOOL			TrqFilClrCmd;			/* トルク指令フィルタ積分初期化要求						*/
	BOOL			TrqFilDisable;			/* トルク指令フィルタ無効要求							*/
//	LONG			TrqInputPos;			/* トルク外乱指令入力位置選択							*//* <S0B7> */
	LONG			SpdLimit;				/* トルク制御時の速度制限値								*/
	LONG			OverTrqIntegBuf[2];		/* トルク制御時の速度制限用積分バッファ					*/
/*--------------------------------------------------------------------------------------------------*/
	LONG			OverTrq;				/* @@ Over Torque [2^24/MaxTrq]							*/
	BOOL			SpdClamp;				/* @@ Speed Clamp Flag on Torque Control Mode			*/
/*--------------------------------------------------------------------------------------------------*/
	BOOL			TrqClamp;				/* <S045> Torque Clamp Flag 							*/
/*--------------------------------------------------------------------------------------------------*/
	LONG			SpdRefi;				/* 速度指令入力						[2^24/OvrSpd]		*/
	LONG			SpdRfFilo;				/* 速度指令フィルタ出力				[2^24/OvrSpd]		*/
	LONG			SpdFbki;				/* 速度FB入力						[2^24/OvrSpd]		*/
	LONG			SpdObsFbki;				/* 速度FB入力(OBS後)				[2^24/OvrSpd]		*/
	LONG			VelIvar64[2];			/* 積分制御演算用(制御切り替え時ショック低減用)			*/
/*--------------------------------------------------------------------------------------------------*/
	LONG			PosRefLo;				/* 指令位置(Low)					[指令単位]			*/
	LONG			PosRef;					/* 位置制御時の指令位置				[指令単位]			*/
	PMAFV			Pmafvar;				/* 位置指令移動平均フィルタ演算用変数					*/
	LONG			dPcmdFilo;				/* 位置指令フィルタ出力				[Pulse/Scan]		*/
	LONG			Pmafbuf[MAX_NETCYCLE];	/* 位置指令移動平均フィルタ演算用BUF					*/
	LONG			dPFfFilo;				/* 位置増分値FFフィルタ出力								*/
	BOOL			PicvClrCmd;				/* 位置偏差積分クリア要求								*/
	BOOL			PerrClrReq;				/* 位置偏差クリア要求(テーブル運転/PJOG専用)			*/
	BOOL			PerClrEdge;				/* @@  位置偏差クリアエッジ要求(ANLG用)					*/
	LONG			ClrFbPos;				/* @@  位置偏差クリアラッチ位置(ANLG用)					*/
/*--------------------------------------------------------------------------------------------------*/
	LONG			SpdFFCx;				/* 拡張制御：速度FF補償				[2^24/OvrSpd]		*/
	LONG			SpdFBCx;				/* 拡張制御：速度FB補償				[2^24/OvrSpd]		*//* 2013/04/01版MDでは、ｺﾒﾝﾄｱｳﾄされている	*/	
	LONG			TrqFFCx;				/* 拡張制御：トルクFF補償			[2^24/MaxTrq]		*/
	LONG			TrqFBCx;				/* 拡張制御：トルクFB補償			[2^24/MaxTrq]		*/
#endif /* FLOAT_USE */
} CTRL_CMD_MNG;



#define CTRL_LOOP_HANDLER_H
#endif /* CTRL_LOOP_HANDLER_H */
/***************************************** end of file **********************************************/
