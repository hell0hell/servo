/****************************************************************************************************/
/*																									*/
/*																									*/
/*		XlsAmonDef.h : アナログモニタ定義ヘッダファイル												*/
/*																									*/
/*																									*/
/****************************************************************************************************/
/*																									*/
/*																									*/
/*		1. アナログモニタ定義構造体																	*/
/*																									*/
/*		2. アナログモニタゲイン演算関数																*/
/*																									*/
/*		3. アナログモニタ定義テーブルExtern宣言														*/
/*																									*/
/*																									*/
/*																									*/
/*																									*/
/*																									*/
/*																									*/
/************** Copyright (C) Yaskawa Electric Corporation ******************************************/
/*																									*/
/*		2013.10.03 : Made by Excel Macro															*/
/*																									*/
/*																									*/
/****************************************************************************************************/
#ifndef __XLS_AMON_DEF_H
#define __XLS_AMON_DEF_H
#include "Basedef.h"





/****************************************************************************************************/
/*																									*/
/*		アナログモニタ定義構造体																	*/
/*																									*/
/****************************************************************************************************/
/*--------------------------------------------------------------------------------------------------*/
/*		アナログモニタ定義構造体																	*/
/*--------------------------------------------------------------------------------------------------*/
typedef struct  {
		UCHAR	SelNo;							/* 選択No											*/
		UCHAR	Vtype;							/* 変数タイプ										*/
		LONG	(*GetVarData)( void* Axis );	/* モニタ変数取得関数のアドレス						*/
		KSGAIN	(*GetVarGain)( void* Axis );	/* モニタゲイン計算関数のアドレス					*/
} AMONDEF;

/*--------------------------------------------------------------------------------------------------*/
/*		アナログモニタ出力定義																		*/
/*--------------------------------------------------------------------------------------------------*/
typedef	struct	{
		UCHAR	Vtype;							/* モニタ変数タイプ									*/
		LONG	(*GetVarData)( void* Axis );	/* モニタ変数取得関数のアドレス						*/
		LONG	Mgain;							/* モニタ出力ゲイン									*/
		LONG	Offset;							/* モニタ出力オフセット								*/
		VUINT/*<S074>*/	Enable;					/* アクセス許可(TRUE:許可, FALSE:禁止)				*/
		void*	Vaddr;							/* <S074> Monitor Variable Address					*/
//		CHAR	RegVoltMon_Flag_Ch0;			/* <S0E7> モニタ電圧フラグ Ch0(レジスタアクセス)	*/	/* <S0FD> */
//		CHAR	RegVoltMon_Flag_Ch1;			/* <S0E7> モニタ電圧フラグ Ch1(レジスタアクセス)	*/	/* <S0FD> */
//		LONG	RegVoltMonSetVal_Ch0;			/* <S0E7> モニタ電圧設定値 Ch0(レジスタアクセス)	*/	/* <S0FD> */
//		LONG	RegVoltMonSetVal_Ch1;			/* <S0E7> モニタ電圧設定値 Ch1(レジスタアクセス)	*/	/* <S0FD> */
} AMONOUT;


/*--------------------------------------------------------------------------------------------------*/
/*		AMONDEF Version																				*/
/*--------------------------------------------------------------------------------------------------*/
#define AMONDEF_VERSION			0x0001			/* AMONDEF Version									*/
/*--------------------------------------------------------------------------------------------------*/
/*		Variable Type Definition																	*/
/*--------------------------------------------------------------------------------------------------*/
#define XAMDEF_VxLONG			0x00			/* Type：LONG										*/
#define XAMDEF_VxSHORT			0x01			/* Type：SHORT										*/
#define XAMDEF_VxBIT			0x02			/* Type：BIT Signal									*/
#define XAMDEF_VxPRMVAR			0xF0			/* Type：PrmVariable								*/
/*--------------------------------------------------------------------------------------------------*/





/****************************************************************************************************/
/*																									*/
/*		アナログモニタゲイン演算関数																*/
/*																									*/
/****************************************************************************************************/
/*																									*/
/*		AmonGain = AmonGcalFunction( )																*/
/*		AmonOutput [V] = AmonGain * AmonVariable													*/
/*																									*/
/****************************************************************************************************/
/*--------------------------------------------------------------------------------------------------*/
/*		Standard Function																			*/
/*--------------------------------------------------------------------------------------------------*/
KSGAIN	AmonGcalDummy( void *Axis );			/* Dummy Function (Return Zero Gain)				*/
KSGAIN	AmonGcalTorqueRef( void *Axis );		/* Torque Ref. [2^24/MaxTrq] --> [1V/100%]			*/
KSGAIN	AmonGcalMotorSpeed( void *Axis );		/* Motor Speed [2^24/OvrSpd] --> [1V/1000min-1]		*/
KSGAIN	AmonGcalPulseError( void *Axis );		/* Pulse Error [pulse] --> [0.05V/pulse]			*/
KSGAIN	AmonGcalBitSignal( void *Axis );		/* Bit Signal  [0,1] --> [0:0V, 1:5V]				*/
/*--------------------------------------------------------------------------------------------------*/
/*		User Defined Function																		*/
/*--------------------------------------------------------------------------------------------------*/
KSGAIN	AmonGcalPosCmdaSpd( void *Axis );		/* 位置指令速度										*/
KSGAIN	AmonGcalPulseErr01( void *Axis );		/* モータ−負荷間位置偏差							*/
KSGAIN	AmonGcalActGain( void *Axis );			/* 有効ゲイン										*/
KSGAIN	AmonGcalMotPfbkSpd( void *Axis );		/* 位置ループ前指令速度								*/
KSGAIN	AmonGcalTrqRef15K( void *Axis );		/* d軸電流指令										*/
/*--------------------------------------------------------------------------------------------------*/



/****************************************************************************************************/
/*																									*/
/*		アナログモニタ定義テーブルExtern宣言														*/
/*																									*/
/****************************************************************************************************/
extern  const AMONDEF AmonDefTbl[];				/* アナログモニタ定義テーブル						*/
/*--------------------------------------------------------------------------------------------------*/
extern  const USHORT AmonDefTblEntNum;			/* アナログモニタ定義テーブル登録個数				*/
/*--------------------------------------------------------------------------------------------------*/
extern  const AMONDEF AmonDefTblUser[];			/* アナログモニタ定義テーブル						*/
/*--------------------------------------------------------------------------------------------------*/
extern  const USHORT AmonDefTblUserEntNum;		/* アナログモニタ定義テーブル登録個数				*/
/*--------------------------------------------------------------------------------------------------*/
/*		Define Entry Number																			*/
/*--------------------------------------------------------------------------------------------------*/
#if		OPENSW_AMONDEF == 0
#define AMONDEFTBL_ENTNUM	AmonDefTblEntNum
#else
#define AMONDEFTBL_ENTNUM	(AmonDefTblEntNum + AmonDefTblUserEntNum)
#endif
/*--------------------------------------------------------------------------------------------------*/






#endif //__XLS_AMON_DEF_H
/***************************************** end of file **********************************************/
